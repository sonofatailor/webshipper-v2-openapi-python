# coding: utf-8

"""
    Webshipper V2 REST API

       <p>     The Webshipper API is a RESTful JSON API that gives full control over your Webshipper account. The API is scoped to your <em>account name</em>,     and is accessed via the endpoint <em>https://&lt;account name&gt;.api.webshipper.io/v2/</em>. Your <em>account name</em> is the same as you see when you access the Webshipper web UI     at <em>https://&lt;account name&gt;.webshipper.io</em>.   </p>    <p>     This API conforms to the <a href=\"http://jsonapi.org/\">JSON API standard</a> with the following conventions:     <ul>       <li>Resources are identified with the attribute <code>id</code>, which is a server-side generated sequential integer</li>       <li>Resource types are pluralised and underscored, like <code>order_lines</code></li>       <li>The API has a fixed page limit of 30 records. To fetch more records use the query parameter <code>page[number]</code></li>       <li>All resources have the attributes <code>created_at</code> and <code>updated_at</code> which are ISO 8601 timestamps like <code>2018-03-07T14:01:18.000Z</code> </li>       <li>All country codes are <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">ISO 3166-1 alpha-2</a> codes</li>     </ul>   </p>     <p> It is also possible to download the documentation in the OpenAPI 3.0 <a href=\"?download_openapi=1\">here</a> </p>    <div class=\"alert alert-info\">     <i class=\"fa fa-info mr-2\"></i>     Webshipper <em>strongly</em> recommends using a client library for utilising this API. Refer to jsonapi.org's list of     <a href=\"http://jsonapi.org/implementations/#client-libraries\">jsonapi.org's list of client libraries</a> to find one for your language.   </div> 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional
from pydantic import BaseModel, StrictBool, StrictInt, StrictStr
from pydantic import Field
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class ShippingRates(BaseModel):
    """
    ShippingRates
    """ # noqa: E501
    carrier_id: Optional[StrictInt] = Field(default=None, description="Id of the carrier which the shipping rate belongs to")
    order_channel_id: Optional[StrictInt] = Field(default=None, description="Id of the order channel which the shipping rate belongs to")
    name: Optional[StrictStr] = Field(default=None, description="Name to be displayed in the e-commerce system.")
    carrier_service_code: Optional[StrictStr] = Field(default=None, description="The carrier's service code which must be used when generating parcels with this shipping rate.")
    require_drop_point: Optional[StrictBool] = Field(default=None, description="Determines if the shipping rate requires a drop point to be assigned.")
    visible_for: Optional[StrictInt] = Field(default=None, description="Enum - determines whether the rate is returned for all customers, private_customers or business customers. This must be one of the following values:  <code>any</code>, <code>privat_customers</code>, <code>business_customers</code>")
    service_attributes: Optional[StrictStr] = Field(default=None, description="Array of flattened resources of type <code>Service Attribute</code>. Depends on the carrier service's requirements. Service Attribute has the following attributes:  <code>attr_key</code>, <code>attr_value</code>. You may use the Webshipper Template Language (WTL) for the values.")
    dimensions: Optional[StrictStr] = Field(default=None, description="Predefined dimensions which are a assigned when using the shipping rate. Attributes are: <code>height</code>,<code>width</code> and <code>length</code>. The Webshipper Template Language (WTL) may be used for the values.")
    add_ons: Optional[StrictStr] = Field(default=None, description="Array of add_ons supported by the carrier service.")
    is_return: Optional[StrictBool] = Field(default=None, description="Defines whether the rate is a return (inbound) rate or a standard rate (outbound). Please be aware that this attribute must match the carrier's service type.")
    carriers_email: Optional[StrictBool] = Field(default=None, description="When this is set to true, the shipping rate will enable e-mail notifications from the carrier.")
    comment_map: Optional[StrictStr] = Field(default=None, description="Defines what content is included in the comment field. The Webshipper Template Language (WTL) may be used in this field. For example:  {{order.external_comment}}")
    reference_map: Optional[StrictStr] = Field(default=None, description="Defines what content is included in the reference field. The Webshipper Template Language (WTL) may be used in this field. For example: {{order.visible_ref}}")
    carriers_sms: Optional[StrictBool] = Field(default=None, description="When this is set to true, the shipping rate will enable SMS notifications from the carrier.")
    dutiable: Optional[StrictBool] = Field(default=None, description="Defines whether the goods sent using this shipping rate are dutiable.")
    is_hidden: Optional[StrictBool] = Field(default=None, description="Attribute to indicate if the shipping rate is visible to order channels")
    click_collect: Optional[StrictBool] = None
    reference: Optional[StrictStr] = None
    updated_at: Optional[StrictStr] = Field(default=None, description="The time when resource was last updated or when it was created if it was never updated")
    created_at: Optional[StrictStr] = Field(default=None, description="The time when the resource was created")
    default_colli_type: Optional[StrictStr] = Field(default=None, description="Predefined colli type to be used when using the shipping rate. Must be supported by the carrier.")
    sender_address_id: Optional[StrictInt] = None
    return_address_id: Optional[StrictInt] = None
    invoice_settings: Optional[StrictStr] = None
    shadow_booking_keep_labels: Optional[StrictBool] = None
    shadow_booking_keep_documents: Optional[StrictBool] = None
    ignore_rate_quote_validation: Optional[StrictBool] = None
    custom_message: Optional[StrictStr] = Field(default=None, description="Custom message to be displayed for the shipping rate")
    regions: Optional[StrictStr] = Field(default=None, description="Flattended array of Regions. See section on Shipping Regions and Expressions for more details")
    __properties: ClassVar[List[str]] = ["carrier_id", "order_channel_id", "name", "carrier_service_code", "require_drop_point", "visible_for", "service_attributes", "dimensions", "add_ons", "is_return", "carriers_email", "comment_map", "reference_map", "carriers_sms", "dutiable", "is_hidden", "click_collect", "reference", "updated_at", "created_at", "default_colli_type", "sender_address_id", "return_address_id", "invoice_settings", "shadow_booking_keep_labels", "shadow_booking_keep_documents", "ignore_rate_quote_validation", "custom_message", "regions"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ShippingRates from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
                "carrier_id",
                "order_channel_id",
                "updated_at",
                "created_at",
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of ShippingRates from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "carrier_id": obj.get("carrier_id"),
            "order_channel_id": obj.get("order_channel_id"),
            "name": obj.get("name"),
            "carrier_service_code": obj.get("carrier_service_code"),
            "require_drop_point": obj.get("require_drop_point"),
            "visible_for": obj.get("visible_for"),
            "service_attributes": obj.get("service_attributes"),
            "dimensions": obj.get("dimensions"),
            "add_ons": obj.get("add_ons"),
            "is_return": obj.get("is_return"),
            "carriers_email": obj.get("carriers_email"),
            "comment_map": obj.get("comment_map"),
            "reference_map": obj.get("reference_map"),
            "carriers_sms": obj.get("carriers_sms"),
            "dutiable": obj.get("dutiable"),
            "is_hidden": obj.get("is_hidden"),
            "click_collect": obj.get("click_collect"),
            "reference": obj.get("reference"),
            "updated_at": obj.get("updated_at"),
            "created_at": obj.get("created_at"),
            "default_colli_type": obj.get("default_colli_type"),
            "sender_address_id": obj.get("sender_address_id"),
            "return_address_id": obj.get("return_address_id"),
            "invoice_settings": obj.get("invoice_settings"),
            "shadow_booking_keep_labels": obj.get("shadow_booking_keep_labels"),
            "shadow_booking_keep_documents": obj.get("shadow_booking_keep_documents"),
            "ignore_rate_quote_validation": obj.get("ignore_rate_quote_validation"),
            "custom_message": obj.get("custom_message"),
            "regions": obj.get("regions")
        })
        return _obj


